{"version":3,"sources":["components/Item.js","components/Content.js","helpers/useFetch.js","App.js","index.js"],"names":["Item","props","className","src","img","title","Content","data","showItem","index","volumeInfo","imageLinks","thumbnail","line","useFetch","url","useState","loading","state","setState","useEffect","fetch","then","x","json","y","items","App","useForm","register","search","watch","elem","document","getElementsByClassName","classList","add","remove","type","ref","name","placeholder","ReactDOM","render","getElementById"],"mappings":"uLAUeA,EARF,SAACC,GACV,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,UAAS,yBAAKC,IAAKF,EAAMG,OACxC,yBAAKF,UAAU,SAAQ,4BAAKD,EAAMI,UC8B/BC,EAjCC,SAACL,GACb,IAAMM,EAAON,EAAMM,MAAQN,EAAMM,KAC3BC,EAAW,SAAAC,GAEb,GAAIF,GAAQA,EAAKE,GACb,OAAKF,EAAKE,GAAOC,WAAWC,WAGjB,kBAAC,EAAD,CAAMN,MAAOE,EAAKE,GAAOC,WAAWL,MAAOD,IAAKG,EAAKE,GAAOC,WAAWC,WAAWC,YAFlF,kBAAC,EAAD,CAAMP,MAAOE,EAAKE,GAAOC,WAAWL,MAAOD,IAAI,uHAMlE,OACI,yBAAKF,UAAU,OACX,yBAAKA,UAAU,OACI,KAAdD,EAAMY,KAAcL,EAAS,GAAKA,EAAS,IAEhD,yBAAKN,UAAU,OACI,KAAdD,EAAMY,KAAcL,EAAS,GAAKA,EAAS,IAEhD,yBAAKN,UAAU,OACI,KAAdD,EAAMY,KAAcL,EAAS,GAAKA,EAAS,IAEhD,yBAAKN,UAAU,OACI,KAAdD,EAAMY,KAAcL,EAAS,GAAKA,EAAS,IAEhD,yBAAKN,UAAU,OACI,KAAdD,EAAMY,KAAcL,EAAS,GAAKA,EAAS,M,OClB7CM,EAVE,SAAAC,GAAQ,IAAD,EACMC,mBAAS,CAACT,KAAM,KAAMU,SAAS,IADrC,mBACbC,EADa,KACNC,EADM,KAQxB,OANIC,qBAAU,WACND,GAAS,SAAAD,GAAK,MAAK,CAACX,KAAKW,EAAMX,KAAMU,SAAQ,MAC7CI,MAAMN,GAAKO,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAChCN,EAAS,CAACZ,KAAKkB,EAAEC,MAAOT,SAAQ,SAErC,CAACF,IACDG,G,OCkCQS,MAvCf,WAAgB,IAAD,EAEWC,YAAQ,IAA3BC,EAFQ,EAERA,SAGHC,GAASC,EALE,EAEEA,OAGE,UAEfD,IACAA,EAAS,KAEb,IAAIE,EAAOC,SAASC,uBAAuB,WAAW,GACxC,KAAVJ,GAAiBE,EACjBA,EAAKG,UAAUC,IAAI,aACfJ,GACJA,EAAKG,UAAUE,OAAO,aAdX,MAgBSvB,EAAS,iDAAD,OAAkDgB,IAA3EvB,EAhBQ,EAgBRA,KAAMU,EAhBE,EAgBFA,QAEX,OACI,yBAAKf,UAAU,QACZe,GAAW,uCACV,yBAAKf,UAAU,cACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,QAAd,uBAEJ,yBAAKA,UAAU,gBACb,2BAAOA,UAAU,SAASoC,KAAK,OAAOC,IAAKV,EAAUW,KAAK,SAASC,YAAY,kBAGrF,yBAAKvC,UAAU,WACX,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAASK,KAAMA,EAAMM,KAAK,MAC1B,kBAAC,EAAD,CAASN,KAAMA,EAAMM,KAAK,U,MChC1C6B,IAASC,OACL,kBAAC,EAAD,MACFV,SAASW,eAAe,U","file":"static/js/main.b7ecfc20.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Item = (props) => {\r\n    return (\r\n        <div className=\"item\">\r\n            <div className=\"poster\"><img src={props.img}/></div>\r\n            <div className=\"title\"><h5>{props.title}</h5></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Item\r\n","import React from 'react'\r\nimport Item from './Item'\r\n\r\nconst Content = (props) => {\r\n    const data = props.data && props.data;\r\n    const showItem = index => {\r\n        //Checking if thumbnail exists\r\n        if (data && data[index]) {\r\n            if (!data[index].volumeInfo.imageLinks) {\r\n                return <Item title={data[index].volumeInfo.title} img=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/450px-No_image_available.svg.png\" />\r\n            }else{\r\n                return <Item title={data[index].volumeInfo.title} img={data[index].volumeInfo.imageLinks.thumbnail} />\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                {props.line == \"1\" ? showItem(0) : showItem(5)}\r\n            </div>\r\n            <div className=\"col\">\r\n                {props.line == \"1\" ? showItem(1) : showItem(6)}\r\n            </div>\r\n            <div className=\"col\">\r\n                {props.line == \"1\" ? showItem(2) : showItem(7)}\r\n            </div>\r\n            <div className=\"col\">\r\n                {props.line == \"1\" ? showItem(3) : showItem(8)}\r\n            </div>\r\n            <div className=\"col\">\r\n                {props.line == \"1\" ? showItem(4) : showItem(9)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import {useEffect, useState} from 'react'\r\n\r\nconst useFetch = url => {\r\n    const [state, setState] = useState({data: null, loading: true})\r\n    useEffect(() => {\r\n        setState(state => ({data:state.data, loading:false}))\r\n        fetch(url).then(x => x.json()).then(y => {\r\n            setState({data:y.items, loading:true})\r\n        })\r\n    }, [url])\r\nreturn state;\r\n}\r\nexport default useFetch;\r\n","import React from 'react';\nimport Content from './components/Content';\nimport useFetch from './helpers/useFetch';\nimport {useForm} from 'react-hook-form';\n\nfunction App() {\n\nconst {register, watch} = useForm({  //useForm Hook\n});\n\nvar search = watch(\"search\");  //Watching every typed letter\n\nif(!search)  //Declaring search to \"*\" in order to avoid 400 error (passing nothing)\n    search = \"*\"\n\nvar elem = document.getElementsByClassName('content')[0]; //If nothing passed, add class and show nothing\nif (search == \"*\" && elem)\n    elem.classList.add('noContent');\nelse if(elem)\n    elem.classList.remove('noContent')\n//Passing search with API link to useFetch hook, saving data and loading process\nconst {data, loading} = useFetch(`https://www.googleapis.com/books/v1/volumes?q=${search}`);\n\n  return (\n      <div className=\"app\">\n      { !loading && <h1>Loading</h1>}\n          <div className=\"headerFlex\">\n              <div className=\"headerLogo\">\n                  <h1 className=\"logo\">GoogleBookDataBase</h1>\n              </div>\n              <div className=\"headerSearch\">\n                <input className=\"search\" type=\"text\" ref={register} name=\"search\" placeholder=\"Live Search\" />\n              </div>\n          </div>\n          <div className=\"content\">\n              <div className=\"container\">\n                <Content data={data} line=\"1\" />\n                <Content data={data} line=\"2\" />\n              </div>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}